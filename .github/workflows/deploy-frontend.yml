name: Deploy Frontend to Vercel

on:
  workflow_dispatch:
    inputs:
      environment:
        description: 'Deploy environment (production or preview)'
        required: false
        default: 'production'
        type: choice
        options:
          - production
          - preview

jobs:
  deploy:
    name: Build and Deploy
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: frontend
    env:
      VERCEL_TOKEN: ${{ secrets.VERCEL_TOKEN }}
      VERCEL_ORG_ID: ${{ secrets.VERCEL_ORG_ID }}
      VERCEL_PROJECT_ID: ${{ secrets.VERCEL_PROJECT_ID }}
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 20
          cache: npm
          cache-dependency-path: frontend/package-lock.json

      - name: Install dependencies
        run: npm ci

      - name: Install Vercel CLI
        run: npm i -g vercel@latest

      - name: Pull Vercel environment (prod)
        if: github.event_name == 'push' && github.ref == 'refs/heads/main'
        run: vercel pull --yes --environment=production --token "$VERCEL_TOKEN"

      - name: Pull Vercel environment (dispatch)
        if: github.event_name == 'workflow_dispatch' && inputs.environment == 'production'
        run: vercel pull --yes --environment=production --token "$VERCEL_TOKEN"

      - name: Pull Vercel environment (preview)
        if: github.event_name == 'workflow_dispatch' && inputs.environment == 'preview'
        run: vercel pull --yes --environment=preview --token "$VERCEL_TOKEN"

      - name: Build (Vercel build)
        run: vercel build --token "$VERCEL_TOKEN"

      - name: Deploy to Vercel (prod)
        if: github.event_name == 'push' && github.ref == 'refs/heads/main'
        run: vercel deploy --prebuilt --prod --token "$VERCEL_TOKEN"

      - name: Deploy to Vercel (dispatch prod)
        if: github.event_name == 'workflow_dispatch' && inputs.environment == 'production'
        run: vercel deploy --prebuilt --prod --token "$VERCEL_TOKEN"

      - name: Deploy to Vercel (dispatch preview)
        if: github.event_name == 'workflow_dispatch' && inputs.environment == 'preview'
        run: vercel deploy --prebuilt --token "$VERCEL_TOKEN"

      - name: Output preview/prod URL
        run: |
          echo "If previous step succeeded, Vercel printed the deployment URL."
        shell: bash

    # Notes:
    # - Configure repo secrets: VERCEL_TOKEN, VERCEL_ORG_ID, VERCEL_PROJECT_ID
    # - This workflow relies on Vercel Git integration or project linking via 'vercel pull'.
