[tool:pytest]
# Pytest configuration for comprehensive test suite

# Test discovery
testpaths = tests
python_files = test_*.py *_test.py
python_classes = Test*
python_functions = test_*

# Test execution
addopts = 
    --strict-markers
    --disable-warnings
    --tb=short
    --maxfail=5
    --durations=10
    --cov-report=term-missing
    --cov-report=html:htmlcov
    --cov-branch
    --json-report
    --json-report-file=test_results/pytest_report.json

# Markers
markers =
    unit: Unit tests
    integration: Integration tests  
    e2e: End-to-end tests
    performance: Performance tests
    ml: Machine learning tests
    slow: Slow running tests (>5 seconds)
    database: Tests requiring database connection
    api: Tests requiring external API access
    gpu: Tests requiring GPU resources

# Test filtering
minversion = 7.0
testmon_off = true

# Asyncio configuration
asyncio_mode = auto

# Logging
log_cli = true
log_cli_level = INFO
log_cli_format = %(asctime)s [%(levelname)8s] %(name)s: %(message)s
log_cli_date_format = %Y-%m-%d %H:%M:%S

# Coverage configuration
[coverage:run]
source = backend
omit = 
    */tests/*
    */venv/*
    */node_modules/*
    */__pycache__/*
    */migrations/*
    */scripts/archive/*

[coverage:report]
precision = 2
exclude_lines =
    pragma: no cover
    def __repr__
    raise AssertionError
    raise NotImplementedError
    if __name__ == .__main__.:
    class .*\(Protocol\):
    @(abc\.)?abstractmethod

[coverage:html]
directory = htmlcov
title = Backend Test Coverage Report